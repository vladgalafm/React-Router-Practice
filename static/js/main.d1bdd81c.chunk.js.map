{"version":3,"sources":["components/Home/Home.js","components/Contacts/Contacts.js","components/UserInfo/UserInfo.js","components/Users/Users.js","components/PageNotFound/PageNotFound.js","components/Navigation/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","className","Contacts","UserInfo","props","data","name","birth_year","gender","height","mass","hair_color","skin_color","eye_color","Users","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","allPersonsData","personData","showPersonsOptionList","bind","assertThisInitialized","showSelectedPersonInfo","handleChange","identifyKey","str","exec","_this2","fetch","then","response","json","setState","results","e","_this3","select","target","selectedOption","options","selectedIndex","optionUrl","find","person","value","url","_this4","map","key","keys","length","components_UserInfo_UserInfo","size","onChange","Component","PageNotFound","Navigation","NavLink","to","process","exact","App","BrowserRouter","components_Navigation_Navigation","Switch","Route","path","component","Redirect","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d1bdd81c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style.scss';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home\">\r\n      <p className=\"home__head\">\r\n        This is home page\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport './style.scss';\r\n\r\nconst Contacts = () => {\r\n  return (\r\n    <div className=\"contacts\">\r\n      <p className=\"contacts__head\">\r\n        Contacts\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport './style.scss';\r\n\r\nconst UserInfo = (props) => {\r\n  return (\r\n    <div className=\"user-info\">\r\n      <span className=\"user-info__title\">\r\n        Info about {props.data.name}:\r\n      </span>\r\n      <ul className=\"user-info__list\">\r\n        <li className=\"user-info__list-item\">\r\n          <span className=\"user-info__text-highlight\">Birth year:</span> {props.data.birth_year}\r\n        </li>\r\n        <li className=\"user-info__list-item\">\r\n          <span className=\"user-info__text-highlight\">Gender:</span> {props.data.gender}\r\n        </li>\r\n        <li className=\"user-info__list-item\">\r\n          <span className=\"user-info__text-highlight\">Height:</span> {props.data.height}\r\n        </li>\r\n        <li className=\"user-info__list-item\">\r\n          <span className=\"user-info__text-highlight\">Mass:</span> {props.data.mass}\r\n        </li>\r\n        <li className=\"user-info__list-item\">\r\n          <span className=\"user-info__text-highlight\">Hair color:</span> {props.data.hair_color}\r\n        </li>\r\n        <li className=\"user-info__list-item\">\r\n          <span className=\"user-info__text-highlight\">Skin color:</span> {props.data.skin_color}\r\n        </li>\r\n        <li className=\"user-info__list-item\">\r\n          <span className=\"user-info__text-highlight\">Eyes color:</span> {props.data.eye_color}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserInfo;","import React, { Component } from 'react';\r\nimport UserInfo from './../UserInfo/UserInfo';\r\nimport './style.scss';\r\n\r\nclass Users extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      allPersonsData: [],\r\n      personData: {},\r\n    };\r\n    this.showPersonsOptionList = this.showPersonsOptionList.bind(this);\r\n    this.showSelectedPersonInfo = this.showSelectedPersonInfo.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.identifyKey = this.identifyKey.bind(this);\r\n  }\r\n\r\n  identifyKey(str) {\r\n    const match = /\\/people\\/(\\d+)\\//.exec(str);\r\n    return match[1];\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://swapi.co/api/people/')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.setState({\r\n          allPersonsData: data.results,\r\n        });\r\n      });\r\n  }\r\n\r\n  handleChange(e) {\r\n    const select = e.target;\r\n    const selectedOption = select.options[select.selectedIndex];\r\n    const optionUrl = this.state.allPersonsData.find(person => selectedOption.value === person.name).url;\r\n\r\n    fetch(optionUrl)\r\n      .then(response => response.json())\r\n      .then(data => this.setState({\r\n        personData: data,\r\n      }));\r\n  }\r\n\r\n  showPersonsOptionList() {\r\n    return this.state.allPersonsData.map(person => <option key={this.identifyKey(person.url)} value={person.name}>{person.name}</option>);\r\n  }\r\n\r\n  showSelectedPersonInfo() {\r\n    return (Object.keys(this.state.personData).length !== 0 && <UserInfo data={this.state.personData} />);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"users\">\r\n        <span className=\"users__title\">\r\n          Choose character:\r\n        </span>\r\n        <select className=\"users__select\" size=\"1\" onChange={this.handleChange.bind(this)}>\r\n          {this.showPersonsOptionList()}\r\n        </select>\r\n        {this.showSelectedPersonInfo()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport './style.scss';\r\n\r\nconst PageNotFound = () => {\r\n  return (\r\n    <div className=\"page-not-found\">\r\n      <p className=\"page-not-found__head\">\r\n        Error 404: page has not been found\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageNotFound;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './style.scss';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <header className=\"navigation\">\r\n      <nav>\r\n        <ul className=\"navigation__ul\">\r\n          <li className=\"navigation__li\">\r\n            <NavLink className=\"navigation__link\" to={process.env.PUBLIC_URL + '/'} exact>\r\n              Home\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"navigation__li\">\r\n            <NavLink className=\"navigation__link\" to={process.env.PUBLIC_URL + '/contacts'}>\r\n              Contacts\r\n            </NavLink>\r\n          </li>\r\n          <li className=\"navigation__li\">\r\n            <NavLink className=\"navigation__link\" to={process.env.PUBLIC_URL + '/users'}>\r\n              Users\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Navigation;","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Home from './components/Home/Home';\nimport Contacts from './components/Contacts/Contacts';\nimport Users from './components/Users/Users';\nimport PageNotFound from './components/PageNotFound/PageNotFound';\nimport Navigation from './components/Navigation/Navigation';\nimport './styles/reset.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <Navigation />\n          <Switch>\n            <Route path={process.env.PUBLIC_URL + '/'} component={Home} exact />\n            <Route path={process.env.PUBLIC_URL + '/contacts'} component={Contacts} />\n            <Route path={process.env.PUBLIC_URL + '/users'} component={Users} />\n            <Route path={process.env.PUBLIC_URL + '/404'} component={PageNotFound} />\n            <Redirect to={process.env.PUBLIC_URL + '/404'} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}